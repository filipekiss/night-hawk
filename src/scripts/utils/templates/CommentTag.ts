export default function CommentTag(templateState) {
    this.tags = ['nighthawk_header'];

    this.parse = function(parser, nodes, lexer) {
        var tok = parser.nextToken();
        var args = parser.parseSignature(null, true);
        parser.advanceAfterBlockEnd(tok.value);
        return new nodes.CallExtension(this, 'run', args);
    };

    this.run = function(context, commentChar, author) {
        if (templateState.hasAddedComment === true) {
            return;
        }
        templateState.hasAddedComment = true;
        return autoGeneratedComment(commentChar, author);
    };
}

function autoGeneratedComment(commentChar = '//', author = null) {
    const generationTime = new Date();
    const headerInfo = `${commentChar} Night Hawk
${commentChar} ------------------------------------------------------------------------------
${commentChar} Authors
${commentChar} -------
${commentChar} ${author}
${commentChar} ------------------------------------------------------------------------------
${commentChar} Last changed
${commentChar} ------------
${commentChar} ${generationTime
        .toISOString()
        .substring(0, 16)
        .replace('T', ' ')
        .replace(/\-/g, '/')}
${commentChar} ------------------------------------------------------------------------------`;
    return headerInfo;
}
